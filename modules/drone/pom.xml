<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>de.dfki.cos.basys.pom</groupId>
		<artifactId>starter-parent</artifactId>
		<version>0.3.0-SNAPSHOT</version>
		<relativePath/>
	</parent>

	<properties>
		<bundle.symbolicName>de.dfki.cos.basys.p4p.controlcomponent.drone</bundle.symbolicName>
		<bundle.namespace>de.dfki.cos.basys.p4p.controlcomponent.drone</bundle.namespace>		
		<docker.image.name>controlcomponent-${project.artifactId}</docker.image.name>		
	</properties>

	<groupId>de.dfki.cos.basys.p4p.controlcomponent</groupId>
	<artifactId>drone</artifactId>
	<name>${bundle.symbolicName}</name>
	<packaging>jar</packaging>

	<dependencies>

		<dependency>
			<groupId>de.dfki.cos.basys.controlcomponent</groupId>
			<artifactId>spring</artifactId>
			<version>${basys-controlcomponent.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.client.mqttv3 -->
		<dependency>
    		<groupId>org.eclipse.paho</groupId>
    		<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
    		<version>1.2.1</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/javax.json/javax.json-api -->
		<dependency>
		    <groupId>javax.json</groupId>
		    <artifactId>javax.json-api</artifactId>
		    <version>1.1.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.glassfish/javax.json -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.1.4</version>
		</dependency>
		
	</dependencies>


	<profiles>
		<profile>
			<id>dockerbuild</id>
			<activation>
				<!-- This profile is always active if there is a Dockerfile and a user 
					name is given -->
				<file>
					<exists>src/main/docker/Dockerfile</exists>
				</file>
				<property>
					<name>docker.username</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<layers>
								<enabled>true</enabled>
								<includeLayerTools>true</includeLayerTools>
							</layers>
							<excludes>
								<exclude>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
								</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>${docker.username}/${docker.image.name}</name>
											<build>
												<assembly>
													<descriptorRef>artifact</descriptorRef>
												</assembly>
												<tags>
													<tag>${docker.image.version}</tag>
												</tags>
												<dockerFile>Dockerfile</dockerFile>
												<contextDir>${project.basedir}/src/main/docker</contextDir>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>push-docker</id>
								<phase>deploy</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>${docker.username}/${docker.image.name}</name>
											<!-- needs to be set to this registry https://github.com/fabric8io/docker-maven-plugin/pull/1578 -->
											<registry>https://index.docker.io/v1/</registry>
											<build>
												<assembly>
													<descriptorRef>artifact</descriptorRef>
												</assembly>
												<tags>
													<tag>${docker.image.version}</tag>
												</tags>
												<dockerFile>Dockerfile</dockerFile>
												<contextDir>${project.basedir}/src/main/docker</contextDir>
												<buildx>
													<platforms>${docker.target.platforms}</platforms>
												</buildx>
												<noCache/>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
						</executions>
						
						
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
